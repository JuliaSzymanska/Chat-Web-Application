put:
  tags:
    - Chat
  summary: Create Chat
  description: Create chat with the selected users and name
  operationId: createChat
  security:
    - token: 
      - super_user
  responses:
    '200':
      description: Success
      content:
        application/json:
          example:
            message: Chat successfully created!
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/CreateChat.yaml
    description: Registration user object
    required: true

get:
  tags:
    - Chat
  summary: Find Chat
  description: Find Chat with given name
  opearationId: findChat
  security:
    - token: 
      - user
  parameters:
    - name: chatName
      in: path
      description: Searched chat name
      required: false
      schema:
        type: string
  responses:
    '200':
      description: Success
      content:
        application/json:
          example:
            chatsList: [
              {
                userList: [
                  {
                    name: Administrator,
                    surname: Administracyjny,
                    email: admin@admin.pl,
                    username: admin
                  },
                  {
                    name: Przemek,
                    surname: Zdrzalik,
                    email: p@z.pl,
                    username: Przemek
                  },
                  {
                    name: Julia,
                    surname: Szymanska,
                    email: J@S.pl,
                    username: Julia
                  }
                ],
                chatName: testowy,
                lastMessageDate: 2020-12-29T18:27:27.550+00:00,
                id: 1
              }
            ]

delete:
  tags:
    - Chat
  summary: Delete Chat
  description: Delete chat with the specified id
  operationId: deleteChat
  security:
    - token: 
      - user
  parameters:
    - name: chatId
      in: path
      description: Selected chat id
      required: true
      schema:
        type: int
  responses:
    '200':
      description: Success
      content:
        application/json:
          example:
            message: Chat successfully deleted.
    '404':
      description: Chat with that id doesn't exist
      content:
        application/json:
          example:
            message: 'Error: Chat not found'
    '403':
      description: User doesn't have access to this chat
      content:
        application/json:
          example:
            message: You don't have access to this chat.

post:
  tags:
    - Chat
  summary: Changes chat's name
  description: Changes chat's name with specified value 
  operationId: changeChatName
  security:
    - token: 
      - user
  parameters:
    - name: chatId
      in: path
      description: Selected chat id
      required: true
      schema:
        type: int
    - name: chatName
      in: path
      description: New chat name
      required: true
      schema:
        type: String
  responses:
    '200':
      description: Success
      content:
        application/json:
          example:
            message: Chat name changed successfully.
    '404':
      description: Chat with that id doesn't exist
      content:
        application/json:
          example:
            message: 'Error: Chat not found'
    '403':
      description: User doesn't have access to this chat
      content:
        application/json:
          example:
            message: You don't have access to this chat.